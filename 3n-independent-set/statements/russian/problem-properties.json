{"scoring":null,"notes":"В первом тесте из условия граф выглядит так:\r\n\r\n\r\n\\begin{center}\r\n\\includegraphics[height=2cm]{graph1.eps}\r\n\\end{center}\r\n\r\n\r\nВо втором тесте из условия граф выглядит так:\r\n\r\n\\begin{center}\r\n\\includegraphics[height=3cm]{graph2.eps}\r\n\\end{center}\r\n","legend":"Дан неориентированный граф, состоящий из $3n$ вершин и \\textbf{ровно} $3n$ рёбер. Независимым множеством назовём множество вершин такое, что между любыми двумя вершинами в нём нет ребра.\r\n\r\nВам интересно, можно ли найти в данном графе независимое множество, состоящее из $n$ вершин.\r\n","authorLogin":"ch_egor","language":"russian","timeLimit":1000,"output":"В случае, если в графе нет независимого множества размера $n$, выведите <<\\texttt{No}>>. В противном случае в первой строке выведите <<\\texttt{Yes}>>, а во второй~--- $n$ различных целых чисел~--- номера вершин в независимом множестве.\r\n\r\nЕсли существует несколько решений, выведите любое из них.\r\n","inputFile":"stdin","outputFile":"stdout","input":"В первой строке задано целое число $n$ ($1 \\leq n \\leq 100\\,000$).\r\n\r\nВ следующих $3n$ строках задано описание рёбер графа. Каждое ребро задано парой целых чисел $u_i, v_i$ ($1 \\leq u_i, v_i \\leq 3n$)~--- номерами вершин, которые оно соединяет.\r\n\r\nГарантируется, что в графе нет петель и кратных рёбер.\r\n","authorName":"Egor Chunaev","sampleTests":[{"output":"Yes\r\n1\r\n","input":"1\r\n1 2\r\n2 3\r\n3 1\r\n","inputFile":"example.01","outputFile":"example.01.a"},{"output":"Yes\r\n1 5","input":"2\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n1 3\r\n2 4\r\n","inputFile":"example.02","outputFile":"example.02.a"}],"name":"Трудная задача","interaction":null,"memoryLimit":536870912,"tutorial":"\\textit{Автор и разработчик задачи: Степан Стёпкин}\r\n\r\nВоспользуемся следующим алгоритмом. Изначально добавим все вершины в независимое множество. На первом шаге будем удалять вершины из независимого множества пока они соединены хотя бы с двумя вершинами множества. На втором шаге будем удалять все вершины, которые соединены хотя бы с одной вершиной независимого множества.\r\n\r\nОчевидно, что множество, полученное в конце работы алгоритма, действительно является независимым. Покажем, что оно имеет размер хотя бы $n$.\r\n\r\nПредположим, что после первого шага работы алгоритма в множестве осталось $F$ вершин, соединённых $M$ рёбрами. Во-первых, $2(3n - F) \\leq 3n - M$, поскольку при удалении каждой вершины было удалено хотя бы два ребра. Во-вторых, $2M \\leq F$, поскольку каждая вершина из множества соединена не более, чем с одной вершиной из множества.\r\n\r\nСложим эти неравенства; после упрощения получим $F - M \\geq n$. Заметим, что $F - M$~--- это в точности размер независимого множества в конце, поскольку при удалении каждой вершины на втором шаге удаляется ровно одно ребро.\r\n\r\nДанный алгоритм нетрудно реализовать так, чтобы он имел сложность $O(n)$ или $O(n \\log n)$."}